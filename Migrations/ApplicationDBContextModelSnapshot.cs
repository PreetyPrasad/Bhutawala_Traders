// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using inventroy.ApplicationContext;

#nullable disable

namespace inventroy.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("inventroy.Models.ApplyCredit", b =>
                {
                    b.Property<int>("ApplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplyId"));

                    b.Property<int>("CreditNoteId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceDateInvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ApplyId");

                    b.HasIndex("CreditNoteId");

                    b.HasIndex("InvoiceDateInvoiceId");

                    b.ToTable("ApplyCredits");
                });

            modelBuilder.Entity("inventroy.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("inventroy.Models.CreditNote", b =>
                {
                    b.Property<int>("CreditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CreditId"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceDateInvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("NoteNo")
                        .HasColumnType("int");

                    b.HasKey("CreditId");

                    b.HasIndex("InvoiceDateInvoiceId");

                    b.ToTable("CreditNotes");
                });

            modelBuilder.Entity("inventroy.Models.CustomerInstallment", b =>
                {
                    b.Property<int>("CustomerInstallmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerInstallmentId"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("InvoicId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceDateInvoiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Paymentmode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerInstallmentId");

                    b.HasIndex("InvoiceDateInvoiceId");

                    b.ToTable("CustomerInstallments");
                });

            modelBuilder.Entity("inventroy.Models.InvoiceDate", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<double>("GST")
                        .HasColumnType("float");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<string>("unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceId");

                    b.HasIndex("MaterialId");

                    b.ToTable("InvoiceDates");
                });

            modelBuilder.Entity("inventroy.Models.InvoiceMaster", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GSTAmount")
                        .HasColumnType("float");

                    b.Property<string>("GST_TYPE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GrossAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvoiceNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("NoticePeriod")
                        .HasColumnType("datetime2");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("InvoiceId");

                    b.ToTable("InvoiceMasters");
                });

            modelBuilder.Entity("inventroy.Models.Inwordstock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockId"));

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<int?>("PurchaseMasterPurchaseId")
                        .HasColumnType("int");

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.Property<DateTime>("RecivedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StockId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("PurchaseMasterPurchaseId");

                    b.ToTable("Inwordstocks");
                });

            modelBuilder.Entity("inventroy.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaterialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Net_Qty")
                        .HasColumnType("float");

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaterialId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("inventroy.Models.PurchaseMaster", b =>
                {
                    b.Property<int>("PurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseId"));

                    b.Property<string>("BillNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GST_Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("GrossTotal")
                        .HasColumnType("float");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NoticePeriod")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("PurchaseId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseMasters");
                });

            modelBuilder.Entity("inventroy.Models.SellsReturnDetail", b =>
                {
                    b.Property<int>("SellsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SellsID"));

                    b.Property<int?>("InvoiceDateInvoiceId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceDetailId")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("InwordstockStockId")
                        .HasColumnType("int");

                    b.Property<double>("Qty")
                        .HasColumnType("float");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<string>("unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SellsID");

                    b.HasIndex("InvoiceDateInvoiceId");

                    b.HasIndex("InwordstockStockId");

                    b.ToTable("SellsReturnDetails");
                });

            modelBuilder.Entity("inventroy.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("AccountNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BanckBranch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GSTIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IFSC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PinCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("inventroy.Models.ApplyCredit", b =>
                {
                    b.HasOne("inventroy.Models.CreditNote", "CreditNote")
                        .WithMany("ApplyCredits")
                        .HasForeignKey("CreditNoteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("inventroy.Models.InvoiceDate", "InvoiceDate")
                        .WithMany()
                        .HasForeignKey("InvoiceDateInvoiceId");

                    b.Navigation("CreditNote");

                    b.Navigation("InvoiceDate");
                });

            modelBuilder.Entity("inventroy.Models.CreditNote", b =>
                {
                    b.HasOne("inventroy.Models.InvoiceDate", "InvoiceDate")
                        .WithMany("CreditNotes")
                        .HasForeignKey("InvoiceDateInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvoiceDate");
                });

            modelBuilder.Entity("inventroy.Models.CustomerInstallment", b =>
                {
                    b.HasOne("inventroy.Models.InvoiceDate", "InvoiceDate")
                        .WithMany()
                        .HasForeignKey("InvoiceDateInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvoiceDate");
                });

            modelBuilder.Entity("inventroy.Models.InvoiceDate", b =>
                {
                    b.HasOne("inventroy.Models.Material", "Material")
                        .WithMany("InvoiceDates")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("inventroy.Models.Inwordstock", b =>
                {
                    b.HasOne("inventroy.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("inventroy.Models.PurchaseMaster", "PurchaseMaster")
                        .WithMany()
                        .HasForeignKey("PurchaseMasterPurchaseId");

                    b.Navigation("Material");

                    b.Navigation("PurchaseMaster");
                });

            modelBuilder.Entity("inventroy.Models.Material", b =>
                {
                    b.HasOne("inventroy.Models.Category", "Category")
                        .WithMany("Materials")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("inventroy.Models.PurchaseMaster", b =>
                {
                    b.HasOne("inventroy.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("inventroy.Models.SellsReturnDetail", b =>
                {
                    b.HasOne("inventroy.Models.InvoiceDate", "InvoiceDate")
                        .WithMany("sellsReturnDetails")
                        .HasForeignKey("InvoiceDateInvoiceId");

                    b.HasOne("inventroy.Models.Inwordstock", "Inwordstock")
                        .WithMany()
                        .HasForeignKey("InwordstockStockId");

                    b.Navigation("InvoiceDate");

                    b.Navigation("Inwordstock");
                });

            modelBuilder.Entity("inventroy.Models.Category", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("inventroy.Models.CreditNote", b =>
                {
                    b.Navigation("ApplyCredits");
                });

            modelBuilder.Entity("inventroy.Models.InvoiceDate", b =>
                {
                    b.Navigation("CreditNotes");

                    b.Navigation("sellsReturnDetails");
                });

            modelBuilder.Entity("inventroy.Models.Material", b =>
                {
                    b.Navigation("InvoiceDates");
                });
#pragma warning restore 612, 618
        }
    }
}
